{"version":3,"sources":["img/user.jpg","components/PrivateRoute.js","utils/axiosWithAuth.js","components/Login.js","components/Input.js","components/PlantList.js","components/PlantPage.js","components/Navbar.js","components/Signup.js","components/User.js","App.js","index.js"],"names":["module","exports","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","axiosWithAuth","token","axios","create","baseURL","headers","Authorization","loginSchema","yup","shape","username","min","required","password","Login","useState","login","setLogin","errors","setErrors","buttonDisable","setButtonDisable","post","setPost","useEffect","isValid","then","valid","handleChange","event","persist","newlogin","target","name","value","validate","catch","error","validateChanges","className","onSubmit","preventDefault","res","data","console","log","setItem","userId","htmlFor","type","id","onChange","placeholder","length","minLength","Button","color","disabled","Input","errorMessage","style","initialPlant","Date","now","nickname","species","h2oFrequency","ListWrapper","styled","div","AddWrapper","PlantList","plants","updatePlants","editing","setEditing","plantToEdit","setPlantToEdit","newPlant","setNewPlant","buttonDisabled","setButtonDisabled","useHistory","formSchema","handleInputChange","e","err","validation","map","plant","key","onClick","editPlant","delete","response","filter","plantId","deletePlant","put","get","updatedPlants","PlantPage","plantList","setPlantList","Navbar","NavWrapper","activeClassName","exact","signUpSchema","phoneNumber","Signup","signUp","setSignUp","handleChanges","newSignUp","validateChange","pattern","User","handleInput","setState","updateInfo","state","url","alert","history","push","deleteMyAccount","clear","sessionStorage","window","location","reload","this","Wrapper","UserBar","React","withRouter","img","AppWrapper","Background","App","path","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.f90b25b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.3c92a01e.jpg\";","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    return(\n        <Route \n        {...rest}\n        render={props => {\n            if(localStorage.getItem('token')) {\n                return <Component {...props} />\n            } else {\n                return <Redirect to='/' />\n            }\n        }}\n        />\n    )\n}\n\nexport default PrivateRoute;","import axios from 'axios';\n\nexport const axiosWithAuth = () => {\n    const token = localStorage.getItem('token');\n    return axios.create({\n        baseURL: \"https://lambda-sprout.herokuapp.com/\",\n        headers: {\n            Authorization: token\n        }\n    })\n}","import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { Button } from 'reactstrap';\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport styled from \"styled-components\";\n\nconst loginSchema = yup.object().shape({\n  username: yup\n    .string()\n    .min(5, \"minimum of 5 characters required\")\n    .required(),\n  password: yup\n    .string()\n    .min(7, \"minimum of 7 characters required\")\n    .required(),\n});\n\nfunction Login() {\n  const [login, setLogin] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [buttonDisable, setButtonDisable] = useState(true);\n\n  const [post, setPost] = useState([]);\n\n  useEffect(() => {\n    loginSchema.isValid(login).then((valid) => {\n      setButtonDisable(!valid);\n    });\n  }, [login]);\n\n  \n  const validateChanges = (event) => {\n    yup\n      .reach(loginSchema, event.target.name)\n      .validate(event.target.value)\n      .then((valid) => {\n        setErrors({\n          ...errors,\n          [event.target.name]: \"\",\n        });\n      })\n      .catch((error) => {\n        setErrors({\n          ...errors,\n          [event.target.name]: error.errors[0],\n        });\n      });\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    const newlogin = {\n      ...login,\n      [event.target.name]: event.target.value,\n    };\n    validateChanges(event);\n    setLogin(newlogin);\n  };\n\n  const submitLogin = (event) => {\n    event.preventDefault();\n    axiosWithAuth().post(\"https://lambda-sprout.herokuapp.com/login\", login)\n    .then((res) => {\n      setPost(res.data);\n      console.log(\"logged in\", post);\n      localStorage.setItem('token', res.data.token)\n      localStorage.setItem('userId', res.data.userId)\n\n      setLogin({\n        username: \"\",\n        password: \"\",\n      });\n    });\n  };\n\n  return (\n    <div className=\"login\">\n      <h1>LOGIN</h1>\n      <form onSubmit={submitLogin}>\n        <label htmlFor=\"username\" className=\"loginUsername\">\n          Enter username\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            required\n            onChange={handleChange}\n            value={login.username}\n            placeholder=\"       Enter username\"\n          />\n          {errors.username.length > 5 ? (\n            <p className=\"error\">{errors.username}</p>\n          ) : null}\n        </label>\n\n        <label htmlFor=\"password\" className=\"loginPassword\">\n          Enter password\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            required\n            onChange={handleChange}\n            value={login.password}\n            minLength=\"7\"\n            placeholder=\"       Enter password\"\n          />\n          {errors.password.length > 7 ? (\n            <p className=\"error\">{errors.password}</p>\n          ) : null}\n        </label>\n        <Button color=\"warning\"disabled={buttonDisable} type=\"submit\">\n          Log In\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\n//Input reusable component\n\n\nfunction Input(props) {\n\n   const errorMessage = props.errors;\n\n    return(\n    \n        <div>\n     <input {...props}></input>\n     { props.errors.length != 0 && <p style={{color: \"cyan\"}}>{errorMessage}</p>}\n     </div>\n  );\n}\n\n\nexport default Input;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from 'react-router-dom';\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport * as yup from \"yup\";\nimport Input from \"./Input\";\n\nconst initialPlant = {\n  id: Date.now(),\n  nickname: \"\",\n  species: \"\",\n  h2oFrequency: \"\"\n};\n\n\n\nconst PlantList = ({ plants, updatePlants }) => {\n  const [editing, setEditing] = useState(false);\n  const [plantToEdit, setPlantToEdit] = useState(initialPlant);\n  const [newPlant, setNewPlant] = useState(initialPlant);\n  const [errors, setErrors] = useState({...initialPlant})\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const history = useHistory()\n  let id = localStorage.getItem('userId')\n\n   //Schema for validation\n   const formSchema = yup.object().shape({\n    nickname: yup\n    .string()\n    .required(\"Please Enter Plant's Nickname\"),\n    species: yup\n    .string()\n    .required(\"Please Enter Your Plant Species\"),\n    h2oFrequency: yup\n    .string()\n    .required(\"Please Enter Plant's Water Frequency\"),\n   })\n\n   //Side effect hook to disable or enable add button based on validation with current formState synced\n   useEffect(() => {\n    formSchema.isValid(newPlant).then(valid => { setButtonDisabled(!valid);\n    });\n }, [newPlant])\n\n   //Validating the change in value, based on formSchema described above\n   const validation = (e) => {\n     \n    e.persist()\n\n    yup.reach(formSchema, e.target.name)\n\n    .validate(e.target.value)\n\n    .then(valid => {\n      setErrors({...errors, \n      [e.target.name]: \"\" \n   \n       });\n    })\n    .catch(err => {\n      setErrors({...errors, \n        [e.target.name]: err.errors[0] \n      })\n        console.log(err.errors[0])\n    })  \n   }\n\n\n  const editPlant = plant => {\n    setEditing(true);\n    setPlantToEdit(plant);\n  };\n\n\n  const saveEdit = e => {\n    e.preventDefault();\n    axiosWithAuth().put(`https://lambda-sprout.herokuapp.com/plants/${plantToEdit.id}`, plantToEdit)\n    .then(response => {\n      console.log(response)\n      axiosWithAuth().get(`https://lambda-sprout.herokuapp.com/users/${id}/plants`)\n      .then(response => {\n        updatePlants(response.data)\n        setEditing(false)\n      })\n      .catch(error => console.log(error))\n    })\n  };\n\n  const deletePlant = plant => {\n    axiosWithAuth().delete(`https://lambda-sprout.herokuapp.com/plants/${plant.id}`)\n    .then(response => {\n      updatePlants(plants.filter(plantId => plantId.id !== plant.id ))\n    })\n    .catch(error => console.log(error))\n  };\n\n  //Recording user's Input & Call back for validation while user meets the requirements to fill\n  const handleInputChange = (e) => {\n    \n    setNewPlant({...newPlant,\n       [e.target.name]: e.target.value\n    })\n\n    validation(e);\n   }\n\n\n  const submitNewPlant = event => {\n    event.preventDefault();\n    axiosWithAuth().post(`https://lambda-sprout.herokuapp.com/users/${id}/plants`, newPlant)\n    .then(response => {\n      const updatedPlants = [...plants, response.data]\n      updatePlants(updatedPlants)\n      setNewPlant(initialPlant);\n    })\n    .catch(error => console.log(error))\n  }\n  console.log(plants)\n  return (\n    <div>\n      <ListWrapper>\n      <h1 className=\"plantsdisplay\">Your Plants</h1>\n      <ul>\n      {plants.length < 1 ? (<div>LOADING</div>) : (plants.map(plant => (\n          <li key={plant.id} onClick={() => editPlant(plant)}>\n            <span>\n              <span className=\"delete\" onClick={e => {\n                    // e.stopPropagation();\n                    deletePlant(plant)\n                  }\n                }>\n                  x\n              </span>{\" \"}\n              {plant.nickname}\n            </span>\n          </li>\n      )))}\n      </ul>\n     \n      {editing && (\n        <form className=\"editform\" onSubmit={saveEdit}>\n          <legend>edit plant</legend>\n          <label>\n            plant nickname:\n            <input\n              onChange={e =>\n                setPlantToEdit({ ...plantToEdit, nickname: e.target.value })\n              }\n              value={plantToEdit.nickname}\n            />\n          </label>\n          <label>\n            species:\n            <input\n              onChange={e =>\n                setPlantToEdit({\n                  ...plantToEdit,\n                  species: e.target.value }\n                )\n              }\n              value={plantToEdit.species}\n            />\n          </label>\n          <label>\n            h2oFrequency:\n            <input\n              onChange={e =>\n                setPlantToEdit({\n                  ...plantToEdit,\n                  h2oFrequency: e.target.value }\n                )\n              }\n              value={plantToEdit.h2oFrequency}\n            />\n          </label>\n          <div>\n            <button type=\"submit\">save</button>\n            <button onClick={() => setEditing(false)}>cancel</button>\n          </div>\n          \n        </form>\n      )}\n      </ListWrapper>\n      \n      <form onSubmit={submitNewPlant}>\n      <AddWrapper>\n        <div className=\"innerWrapper\">\n        <label htmlFor='nickname'>Plant Nickname: </label>\n        <Input className=\"input\" type='text' name='nickname' id='nickname' value={newPlant.nickname} onChange={handleInputChange} errors={errors.nickname}/>\n        <label htmlFor='species'>Species: </label>\n        <Input className=\"input\" type='text' name='species' id='species' value={newPlant.species} onChange={handleInputChange} errors={errors.species}/>\n        <label htmlFor='h2oFrequency'>H2OFrequency: </label>\n        <Input className=\"input\" type='text' name='h2oFrequency' id='h2oFrequency' value={newPlant.h2oFrequency}  onChange={handleInputChange} errors={errors.h2oFrequency}/>\n        <button type='submit'  className=\"btn btn-primary list-button\" disabled={buttonDisabled}>Add a new plant!</button>\n        </div>\n        </AddWrapper>\n      </form>\n     \n    </div>\n  );\n};\n\nconst ListWrapper = styled.div`\n\n   width: 100%;\n   height: 250px;\n   display: flex;\n   font-family: 'Gotham SSm A', 'Gotham SSm B', sans-serif;\n   justify-content: center;\n   border-radius: 10px;\n   font-family: \"Karma\", sans-serif;\n   @media(max-width: 600px){\n    width: 100%;\n}\nh1{\n  margin-top: 50px;\n}\n\n`;\n\nconst AddWrapper = styled.div`\n   width: 100%;\n   height: 100%;\n   display: flex;\n   font-family: 'Gotham SSm A', 'Gotham SSm B', sans-serif;\n   justify-content: center;\n   align-items: center;\n   border-radius: 10px;\n   font-family: \"Karma\", sans-serif;\n   @media(max-width: 600px){\n    width: 100%;\n}\n   .innerWrapper{\n    width: 40%;\n    margin-bottom: 40px;\n    padding: 4rem;\n    background: gray;\n    color: lightgray;\n    box-sizing: border-box;\n    @media(max-width: 800px){\n     width: 100%;\n  }\n   }\n\n   .input{\n     border: 0;\n     width: 90%;\n     background: lightgray;\n     margin: 5px 0 10px 0;\n     color: #282828;\n     font-size: 16px;\n     padding: 10px 14px;\n     outline: none;\n     line-height: normal;\n     box-shadow: none;\n     @media(max-width: 800px){\n      width: 100%;\n  }\n     :focus{\n       border-bottom: 1px solid cyan;\n     }\n   }\n  \n   button{\n     width: 97%;\n     margin-top: 10px;\n     padding: 10px;\n     outline: none;\n     transition-duration: 0.4s;\n     font-size: 16px;\n     outline: none;\n     border: 0;\n     :hover{\n      \n       background-color: #4CAF50;\n       cursor: pointer;\n\n     }\n   }\n`;\n\nexport default PlantList;","import React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport PlantList from \"./PlantList\";\n\nconst PlantPage = () => {\n  const [plantList, setPlantList] = useState([]);\n  let id = localStorage.getItem('userId')\n  useEffect(() => {\n    axiosWithAuth().get(`https://lambda-sprout.herokuapp.com/users/${id}/plants`)\n    .then(res => {\n      setPlantList(res.data)\n    })\n  }, [id])\n\n  return (\n    <>\n      \n      <PlantList plants={plantList} updatePlants={setPlantList} />\n    </>\n  );\n};\n\nexport default PlantPage;","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport styled from \"styled-components\";\n\n\n const Navbar = () => {\n\n    return (\n    <NavWrapper className=\"nav\">\n    \n       <NavLink className=\"link\" activeClassName=\"active\" exact to=\"/\">Login</NavLink>\n       <NavLink className=\"link\" activeClassName=\"active\" to=\"/signup\">Sign Up</NavLink>\n       <NavLink className=\"link\" activeClassName=\"active\" to=\"/plants\">My Plants</NavLink>\n       <NavLink className=\"link\" activeClassName=\"active\" to=\"/profile\">My Profile</NavLink>\n\n    </NavWrapper>\n    )\n}\n\n\nexport default Navbar;\n\nconst NavWrapper = styled.div`\nbackground-color: lightgray;\ndisplay: flex;\njustify-content: flex-end;\nborder-radius: 20px;\n\n.link {\n    margin: 10px;\n    text-decoration: none;\n    color: black;\n    padding: 10px;\n    padding-top: 10px;\n\n    &:hover{\n        color: gray;\n    }\n\n}\n\na.active{\n    color: gray;\n    background: lightgray;\n}\n\n\n`;","import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\nimport Navbar from './Navbar'\n\nconst signUpSchema = yup.object().shape({\n  username: yup.string().min(6,\"minimum of 6 characters required\").required(\"Username is a required field\"),\n  phoneNumber: yup.string().min(12,\"Please use 111-111-1111 format\").required(),\n  password: yup.string().min(10,\"minimum of 10 characters required\").required()\n\n})\n\nfunction Signup() {\n  const [signUp, setSignUp] = useState({\n    username: \"\",\n    phoneNumber: \"\",\n    password: \"\",\n  });\n\n  const  [errors, setErrors]= useState({\n    username: \"\",\n    phoneNumber: \"\",\n    password: \"\",\n  })\n\nconst [buttonDisabled, setButtonDisabled] = useState(true);\n\n const [post, setPost]= useState([]);\n\nuseEffect(() => {\n  signUpSchema.isValid(signUp).then(valid => {\n    setButtonDisabled(!valid);\n  })\n}, [signUp])\n\nconst validateChange = event => {\n  yup.reach(signUpSchema, event.target.name)\n  .validate(event.target.value)\n  .then(valid => {\n    setErrors({\n      ...errors, [event.target.name] : \"\"\n    })\n  })\n  .catch(error =>{\n    setErrors({\n      ...errors, [event.target.name] : error.errors[0]\n\n    })\n  })\n}\n\n  const handleChanges = (event) => {\n    event.persist();\n    const newSignUp = {\n...signUp, [event.target.name] : event.target.value\n\n    }\n    validateChange(event);\n    setSignUp(newSignUp)\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    axios.post(\"https://lambda-sprout.herokuapp.com/register\", signUp)\n    .then(res => {\n      setPost(res.data);\n      console.log(\"Registered!\", post);\n      \n      setSignUp({\n    username: \"\",\n    phoneNumber: \"\",\n    password: \"\",\n\n      })\n\n    })\n  };\n\n  return (\n    <div className=\"signup\">\n      <h1>SIGNUP</h1>\n      <form onSubmit={submitForm}>\n        <label htmlFor=\"username\" className=\"username\">\n          Create username:\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            required\n            onChange={handleChanges}\n            value={signUp.username}\n            placeholder=\"Create a unique username\"\n          />\n          {errors.username.length > 6 ?<p className= \"error\">{errors.username}</p> : null}\n        </label>\n\n        <label htmlFor=\"phoneNumber\" className=\"phone\">\n          Enter your phone number\n          <input\n            type=\"tel\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            onChange={handleChanges}\n            value={signUp.phoneNumber}\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            required\n            placeholder=\"       123-456-7890\"\n          />\n          {errors.phoneNumber.length > 12 ?<p className= \"error\">{errors.phoneNumber}</p> : null}\n        </label>\n\n        <label htmlFor=\"password\" className=\"password\">\n          Create a password\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            onChange={handleChanges}\n            value={signUp.password}\n            minLength=\"10\"\n            required\n            placeholder=\"       Enter password\"\n          />\n          {errors.password.length > 10 ?<p className= \"error\">{errors.password}</p> : null}\n        </label>\n        <Button color=\"warning\"disabled={buttonDisabled} type=\"submit\">Sign Up</Button>\n      </form>\n    </div>\n  );\n}\nexport default Signup;\n","import React from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport img from \"../img/user.jpg\"\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      phoneNumber: \"\",\n      password: \"\",\n    };\n  }\n  componentDidMount() {\n    let id = localStorage.getItem(`userId`);\n    const url = `https://lambda-sprout.herokuapp.com/api/users/${id}`;\n    this.setState({ id: id });\n    \n      // The try statement lets you test a block of code for errors. The catch statement lets you handle the error. \n      try {\n        axios\n            .get(url, { headers: { Authorization: localStorage.getItem(\"token\") } })\n            .then(res => {\n                this.setState({ username: res.data.username,  phoneNumber: res.data.phoneNumber})\n            })\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n  handleInput = event => {\n    event.preventDefault();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  updateInfo = (data, id) => {\n    data = {\n      username: this.state.username,\n      password: this.state.password,\n      phoneNumber: this.state.phoneNumber,\n    };\n    id = localStorage.getItem(`userId`);\n    console.log(id);\n    const url =\n      `https://lambda-sprout.herokuapp.com//api/users/${id}` ||\n\n              `http://localhost:3000/api/users/${id}`;\n\n      // The try statement lets you test a block of code for errors. The catch statement lets you handle the error. The throw statement lets you create custom errors. \n      try{\n      axios\n        .put(url, data, {\n          headers: { Authorization: localStorage.getItem(\"token\") },\n        })\n        .then((res) => {\n          console.log(res);\n          this.setState({\n            username: res.data.username,\n            phoneNumber: res.data.phoneNumber,\n            password: res.data.password,\n          });\n          alert(\"Your Update Submitted Successfully\");\n          console.log(res.data.phoneNumber);\n          this.props.history.push(\"/plants\");\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  deleteMyAccount = (id) => {\n    id = localStorage.getItem(`userId`);\n    const url =\n    `https://lambda-sprout.herokuapp.com/api/users/${id}` ||\n      `http://localhost:3000/api/users/${id}`;\n      \n    alert(\"Your Account Will be deleted permanantly\");\n    try {\n      axios.delete(url).then((res) => {\n        console.log(res);\n        localStorage.clear();\n        sessionStorage.clear();\n        alert(\"Your Account deleted Successfully\");\n        this.props.history.push(\"/\");\n        window.location.reload(true);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n      <UserBar>\n        <div className ='loginform'>\n          <form onSubmit= {this.updateInfo}>\n              <input\n                  className='input'\n                  onChange={this.handleInput}\n                  placeholder=\"name\"\n                  value={this.state.username}\n                  name=\"username\"\n              />\n              <input\n                  className='input'\n                  type= 'password'\n                  onChange={this.handleInput}\n                  placeholder=\" new password\"\n                  value={this.state.password}\n                  name=\"password\"\n              />\n              <input\n                  className='input'\n                  onChange={this.handleInput}\n                  placeholder=\"phone#\"\n                  value={this.state.phoneNumber}\n                  name=\"phone\"\n              />\n          </form>\n\n          <div className=\"btn\">\n              <button onClick={this.deleteMyAccount}> Delete My Account permanantly</button>\n              <button className=\"updateBtn\" onClick={this.updateInfo}>Update</button>\n          </div>\n        \n          </div>\n      </UserBar>\n  </Wrapper>\n)\n}\n}\n\nexport default withRouter(User);\n\n\nconst Wrapper =styled.div`\n        background-image: url(${img});\n        background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n      width: 1500px;\n      height: 1000px;\n`\nconst UserBar = styled.div`\n    box-shadow: 0px 2px 2px #9464FA;\n    text-align : center;\n    width: 400px;\n    border-radius: 5px;\n    padding-top: 60px;\n    padding-bottom: 60px;\n    margin: 50px auto;\n    .input{\n          margin: 5px;\n          height: 25px;\n          width : 300px;\n          border-radius: 5px;\n          border: none;\n          box-shadow: 0 2px 4px #272727;\n          text-align:center;\n          @media(max-width: 479px){\n              width: 250px;\n          }\n    }\n      button{\n        background-color: #009FB7;\n        border-radius: 5px;\n        color : white;\n        margin: 10px;\n        height: 30px;\n        border: none;       \n      }\n      button:hover{\n          box-shadow: 0 2px 4px #272727;\n          transform: scaleX(1.025) scaleY(1.025);\n          cursor : pointer;\n          transition: all 0.2s;\n      }\n      }\n    }\n  `","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from './components/PrivateRoute';\nimport styled from \"styled-components\";\nimport Login from \"./components/Login\";\nimport PlantPage from './components/PlantPage';\nimport Signup from './components/Signup';\nimport User from './components/User';\nimport NavBar from './components/Navbar';\nimport Background from './img/user.jpg';\n\nfunction App() {\n  return ( \n\n    <AppWrapper>\n      <NavBar />                     \n\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <PrivateRoute path='/plants' component={PlantPage} />\n        <PrivateRoute path='/profile' component={User} />\n        </Switch>\n\n    </AppWrapper>\n  );\n}\n// font-family: 'Gotham SSm A', 'Gotham SSm B', sans-serif;\nconst AppWrapper = styled.div`\nbackground-image: url(${Background});\nbackground-repeat: repeat;\nbackground-position: center;\nwidth: 100%;\nheight: 1000px;\nmargin: 0;\noutline: none;\nfont-family: \"Karma\", sans-serif ;\n\n`\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n<Router><App /></Router>, rootElement);\n\n"],"sourceRoot":""}